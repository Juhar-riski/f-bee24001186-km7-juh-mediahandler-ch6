name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    # Definisikan layanan PostgreSQL menggunakan Docker
    services:
      postgres:
        image: postgres:17
        ports:
          - 5432:5432 
        env:
          POSTGRES_DB: ch6
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Set up environment variables from ENV_SECRET
        run: echo "${{ secrets.ENV_SECRET }}" > .env

      - name: Verify .env file content
        run: cat .env

      - name: Install dependencies
        run: npm install quietly

      - name: Set up Prisma and apply migrations
        run: |
          npx prisma migrate deploy 

      - name: Check environment variables
        run: |
          echo "DATABASE_URL: $DATABASE_URL"
          echo "IMAGEKIT_PUBLIC_KEY: $IMAGEKIT_PUBLIC_KEY"
          echo "IMAGEKIT_SECRET_KEY: $IMAGEKIT_SECRET_KEY"
          echo "IMAGEKIT_URL_ENDPOINT: $IMAGEKIT_URL_ENDPOINT"

      - name: Run tests and generate coverage report
        run: npm test -- --coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          files: ./coverage/lcov.info
          flags: unittests
          name: codecov-coverage-report
